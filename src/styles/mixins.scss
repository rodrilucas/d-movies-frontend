@use "sass:color";
@use "sass:map";
@use "@/styles/variables" as *;
@use "@/styles/base" as *;

@mixin display-position($display, $align-items, $justify-content) {
  display: $display;
  align-items: $align-items;
  justify-content: $justify-content;
}

@mixin icon($content, $width, $height, $url) {
  content: $content;
  width: $width;
  height: $height;
  background-image: url(#{$url});
}

@mixin centralize {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
}

@mixin error {
  display: block;
  font-size: 0.85rem;
  font-weight: 400;
  color: $red-500;
}

@mixin input-filter {
  width: 100%;
  background-color: $black-500;
  margin-top: 0.25rem;
  border-radius: 0.375rem;
  padding: 0.5rem;
  font-size: 0.875rem;
  outline: none;
  color: $white-900;
  border: 1px solid $black-500;
}

@mixin label-filter {
  display: block;
  font-size: 0.875rem;
  font-weight: 500;
}

@mixin btn-form {
  @extend %super-button;
  margin-top: 1rem;
  color: $white-900;
  background-color: $blue-700;
  border-color: $blue-700;

  &:hover {
    background-color: color.adjust($color: $blue-700, $lightness: 10%);
    transition: background-color 1s ease;
  }
}

@mixin range-filter {
  -webkit-appearance: none;
  margin-top: 0.5rem;
  width: 100%;
  height: 6px;
  background: transparent;
  border-radius: 3px;
  outline: none;

  &::-webkit-slider-runnable-track {
    height: 6px;
    background: $black-500;
    border-radius: 3px;
  }

  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 16px;
    height: 16px;
    background: $blue-700;
    cursor: pointer;
    border-radius: 50%;
    border: none;
    margin-top: -5px;
  }

  &::-moz-range-track {
    height: 6px;
    background: $black-500;
    border-radius: 3px;
  }

  &::-moz-range-thumb {
    background: $black-500;
    width: 16px;
    height: 16px;
    cursor: pointer;
    border-radius: 50%;
    border: none;
  }
}

@mixin respond($size) {
  $value: map.get($breakpoints, $size);

  @if $value {
    @media screen and (min-width: $value) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$size}` n√£o encontrado no mapa!";
  }
}
